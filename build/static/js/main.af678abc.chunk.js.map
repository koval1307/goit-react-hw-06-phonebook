{"version":3,"sources":["components/contactsList/contacts-list.module.css","global.module.css","redux/contacts-types.js","redux/contacts-reducer.js","redux/store.js","redux/contacts-actions.js","components/Notification/Notification.js","components/form/Form.js","components/contactListItem/contactListItem.js","components/contactsList/contactsList.js","components/filter/Filter.js","components/appTitle/AppTitle.js","App.js","index.js"],"names":["module","exports","GET","DELETE","FILTER","combineReducers","items","state","type","payload","filter","contact","id","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","getContacts","item","uuidv4","name","number","deleteContact","getFilter","Notification","CSSTransition","className","Form","notification","handleChange","target","value","setState","getContact","e","preventDefault","props","find","el","onSubmit","reset","this","TextField","onChange","Button","variant","color","in","unmountOnExit","timeout","classNames","onEntered","Component","mapDispatchToProps","contactsActions","connect","ContactListItem","styles","contactList__item","tel","btn","onClick","event","currentTarget","mapDispatcToProps","normalizedFilter","toLowerCase","contactList","includes","TransitionGroup","component","contact__list","map","key","mapDispatctToProps","getFilterName","AppTitle","appear","App","wrapper","ReactDOM","render","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,IAAM,2BAA2B,kBAAoB,yCAAyC,KAAO,4BAA4B,SAAW,gCAAgC,MAAQ,6BAA6B,YAAc,mCAAmC,KAAO,4BAA4B,WAAa,oC,wCCAzXD,EAAOC,QAAU,CAAC,QAAU,0B,4JCCfC,EAAM,eACNC,EAAS,kBACTC,EAAS,kBCmBPC,4BAAgB,CAC7BC,MArBmB,WAAoC,IAAnCC,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxC,OAAQD,GACN,KAAKN,EACH,MAAM,GAAN,mBAAWK,GAAX,CAAkBE,IACpB,KAAKN,EACH,OAAOI,EAAMG,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAOH,EAAQG,MAC1D,QACE,OAAOL,IAeXG,OAXoB,WAAqC,IAApCH,EAAmC,uDAA3B,IAA2B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1C,OAAQD,GACN,KAAKJ,EACH,OAAOK,EAAQC,OACjB,QACE,OAAOH,MChBPM,EAAcR,0BAAgB,CACnCS,SAAUC,IAMIC,EAFDC,sBAAYJ,EAAaK,iC,gFCcxB,GAAEC,YAnBG,SAAAC,GAAI,MAAK,CAC3BZ,KAAMN,EACJO,QAAS,CACLG,GAAGS,cACHC,KAAMF,EAAKE,KACXC,OAAOH,EAAKG,UAcUC,cAXR,SAAAZ,GAAE,MAAK,CACzBJ,KAAML,EACNM,QAAS,CACLG,QAQoCa,UAJ1B,SAAAf,GAAM,MAAK,CACzBF,KAAMJ,EACNK,QAAQ,CAACC,a,SCfEgB,G,MAAAA,aAAe,WAC5B,OACE,kBAACC,EAAA,EAAD,KACE,uBAAGC,UAAU,gBAAb,qCCGAC,E,4MACJtB,MAAQ,CACNe,KAAM,IACNC,OAAQ,IACRO,cAAc,G,EAEhBC,aAAe,YAAkC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBZ,EAAOW,K,EAG1BE,WAAa,SAACC,GAEZ,GADAA,EAAEC,iBAEA,EAAKC,MAAM/B,MAAMO,SAASR,MAAMiC,MAAK,SAACC,GAAD,OAAQA,EAAGlB,OAAS,EAAKf,MAAMe,QAEpE,EAAKY,SAAS,CAAEJ,cAAc,EAAMR,KAAM,IAAKC,OAAQ,UAClD,CACL,IAAMZ,EAAU,CACdW,KAAM,EAAKf,MAAMe,KACjBC,OAAQ,EAAKhB,MAAMgB,OACnBX,GAAIS,KAEN,EAAKiB,MAAMG,SAAS9B,GACpB,EAAKuB,SAAS,CAAEZ,KAAM,IAAKC,OAAQ,MAErCa,EAAEJ,OAAOU,S,uDAID,IAAD,SACkBC,KAAKpC,MAAtBe,EADD,EACCA,KADD,EACOC,OACd,OACE,oCACE,0BAAMkB,SAAUE,KAAKR,YACnB,oCAEA,uCAEE,kBAACS,EAAA,EAAD,CACEhC,GAAG,iBACHJ,KAAK,OACLc,KAAK,OACLW,MAAOX,EACPuB,SAAUF,KAAKZ,gBAGnB,+CAEE,kBAACa,EAAA,EAAD,CACEpC,KAAK,MACLc,KAAK,SACLW,MAAOU,KAAKpC,MAAMgB,OAClBsB,SAAUF,KAAKZ,gBAInB,kBAACe,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUxC,KAAK,UAAjD,gBAIF,kBAACmB,EAAA,EAAD,CACEsB,GAAIN,KAAKpC,MAAMuB,aACfoB,eAAa,EACbC,QAAS,IACTC,WAAW,eACXC,UAAW,kBAAM,EAAKnB,SAAS,CAAEJ,cAAc,MAE/C,kBAAC,EAAD,Y,GAnESwB,aA6EbC,EAAqB,CAC3Bd,SAASe,EAAgBrC,aAEVsC,eAPS,SAAAlD,GACvB,MAAO,CAACA,WAM+BgD,EAAzBE,CAA6C5B,G,0BCvFrD,SAAS6B,EAAT,GAIN,IAAD,IAFM/C,QAAWC,EAEjB,EAFiBA,GAAIU,EAErB,EAFqBA,KAAMC,EAE3B,EAF2BA,OAAUC,EAErC,EAFqCA,cAKjC,OACI,wBAAII,UAAW+B,IAAOC,mBACtB,yBAAKhC,UAAW+B,IAAO7C,UAE1B,0BAAMc,UAAW+B,IAAOrC,MAAOA,GAC/B,0BAAMM,UAAW+B,IAAOE,KAAxB,KAAgCtC,IAElC,kBAACuB,EAAA,EAAD,CACElB,UAAW+B,IAAOG,IAClBf,QAAQ,YACRC,MAAM,YACKxC,KAAK,SACLI,GAAIA,EACJmD,QAfQ,SAAAC,GAAK,OAAIxC,EAAcwC,EAAMC,cAAcrD,MAShE,mBCWH,IAAMsD,EAAoB,CACxB1C,cAAegC,EAAgBhC,eAYlBiC,eAVS,SAAClD,GAAW,IAAD,EACPA,EAAMO,SAAxBR,EADyB,EACzBA,MACF6D,EAF2B,EAClBzD,OACiB0D,cAGhC,MAAO,CACLC,YAHuB/D,EAAMI,QAAO,SAAAC,GAAO,OAC3CA,EAAQW,KAAK8C,cAAcE,SAASH,SAMAD,EAAzBT,EApCf,YAAsD,IAA/BY,EAA8B,EAA9BA,YAAa7C,EAAiB,EAAjBA,cAClC,OACE,kBAAC+C,EAAA,EAAD,CACEC,UAAU,KAEV5C,UAAW+B,IAAOc,eAEjBJ,EAAYK,KAAI,SAAClC,GAChB,OACE,kBAACb,EAAA,EAAD,CAAegD,IAAKnC,EAAG5B,GAAIuC,QAAS,IAAKD,eAAa,EACrDE,WAAYO,KACX,kBAACD,EAAD,CACEiB,IAAKnC,EAAG5B,GACRD,QAAS6B,EACThB,cAAeA,YCAvBoD,EAAqB,CACzBC,cAAerB,EAAgB/B,WAGlBgC,eAPS,SAAAlD,GAAK,MAAK,CAChCG,OAAOH,EAAMO,SAASJ,UAMgBkE,EAAzBnB,EApBA,SAAC,GAA+B,IAA7B/C,EAA4B,EAA5BA,OAAQmE,EAAoB,EAApBA,cACxB,OACE,oCACE,wCACA,kBAACjC,EAAA,EAAD,CACEpC,KAAK,OACLyB,MAAOvB,EACPY,KAAK,SACLuB,SAAU,SAAAT,GAAC,OAAIyC,EAAczC,EAAEJ,OAAOC,c,iBCO/B6C,G,MAfE,WACb,OACE,kBAACnD,EAAA,EAAD,CACEoD,QAAQ,EACR9B,IAAI,EACJE,QAAS,IACTD,eAAa,EACbE,WAAW,YAGT,wBAAIxB,UAAU,SAAd,gBCOKoD,EAbH,WACV,OACE,yBAAKpD,UAAW+B,IAAOsB,SACrB,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPNC,IAASC,OAEL,kBAAC,IAAD,CAAUnE,MAAOA,GACf,kBAAC,EAAD,OAGJoE,SAASC,eAAe,W","file":"static/js/main.af678abc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"contacts-list_contact__list__1CVI9\",\"btn\":\"contacts-list_btn__fKySI\",\"contactList__item\":\"contacts-list_contactList__item__3TUPM\",\"name\":\"contacts-list_name__2JGh4\",\"contacts\":\"contacts-list_contacts__PpsPU\",\"enter\":\"contacts-list_enter__swGwa\",\"enterActive\":\"contacts-list_enterActive__24uOt\",\"exit\":\"contacts-list_exit__36oV5\",\"exitActive\":\"contacts-list_exitActive__1rDDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"global_wrapper__327cc\"};","\n\nexport const GET = 'contacts/get';\nexport const DELETE = 'contacts/delete';\nexport const FILTER = 'contacts/filter'\n","import { combineReducers } from \"redux\";\nimport { GET, DELETE, FILTER } from \"./contacts-types\";\n\nconst itemsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case GET:\n      return [...state, payload];\n    case DELETE:\n      return state.filter((contact) => contact.id !== payload.id);\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = \" \", { type, payload }) => {\n  switch (type) {\n    case FILTER:\n      return payload.filter;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { combineReducers, createStore } from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\"\nimport contactsReducer from \"./contacts-reducer\";\nconst rootReducer = combineReducers({\n contacts: contactsReducer,\n});\n\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store","import { DELETE, FILTER, GET } from \"./contacts-types\"\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst getContacts = item => ({\n  type: GET,\n    payload: {\n        id:uuidv4(),\n        name: item.name,\n        number:item.number\n    },\n});\nconst deleteContact = id => ({\n    type: DELETE,\n    payload: {\n        id\n    },\n})\n\nconst getFilter = filter => ({\n    type: FILTER,\n    payload:{filter}\n})\nexport default { getContacts, deleteContact,getFilter }","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./notification.css\";\n\nexport default Notification = () => {\n  return (\n    <CSSTransition>\n      <p className=\"notification\">This contact is already exists</p>\n    </CSSTransition>\n  );\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {connect}   from \"react-redux\"\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport contactsActions from \"../../redux/contacts-actions\"\nimport Notification from \"../Notification/Notification\";\nimport { CSSTransition} from \"react-transition-group\";\n\nimport \"../Notification/notification.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n    notification: false,\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    if (\n      this.props.state.contacts.items.find((el) => el.name === this.state.name)\n    ) {\n      this.setState({ notification: true, name: \" \", number: \" \" });\n    } else {\n      const contact = {\n        name: this.state.name,\n        number: this.state.number,\n        id: uuidv4,\n      };\n      this.props.onSubmit(contact);\n      this.setState({ name: \" \", number: \" \" });\n    }\n    e.target.reset();\n  };\n\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.getContact}>\n          <h2>Name</h2>\n\n          <label>\n            Name:\n            <TextField\n              id=\"outlined-basic\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Phone number:\n            <TextField\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add Contact\n          </Button>\n        </form>\n        <CSSTransition\n          in={this.state.notification}\n          unmountOnExit\n          timeout={2000}\n          classNames=\"notification\"\n          onEntered={() => this.setState({ notification: false })}\n        >\n          <Notification />\n        </CSSTransition>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n return {state}\n}\n\nconst mapDispatchToProps = {\nonSubmit:contactsActions.getContacts\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../contactsList/contacts-list.module.css\";\n\nexport function ContactListItem(\n\n    { contact: { id, name, number }, deleteContact }\n)\n{\n    const handleClick = event => deleteContact(event.currentTarget.id)\n\n    return (\n        <li className={styles.contactList__item}>\n        <div className={styles.contacts}>\n   \n     <span className={styles.name}>{name}</span>\n     <span className={styles.tel}>: {number}</span>\n   </div>\n   <Button\n     className={styles.btn} \n     variant=\"contained\"\n     color=\"secondary\"\n                type=\"button\"\n                id={id}\n                onClick = {handleClick}\n    \n   >\n     delete Contact\n   </Button>\n </li>\n    )\n}\n\n ","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport styles from \"./contacts-list.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport { ContactListItem } from \"../contactListItem/contactListItem\";\nfunction ContactList({ contactList, deleteContact }) {\n  return (\n    <TransitionGroup\n      component=\"ul\"\n      \n      className={styles.contact__list}\n    >\n      {contactList.map((el) => {\n        return (\n          <CSSTransition key={el.id} timeout={250} unmountOnExit\n           classNames={styles}>\n            <ContactListItem\n              key={el.id}\n              contact={el}\n              deleteContact={deleteContact}\n            />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\nconst mapDispatcToProps = {\n  deleteContact: contactsActions.deleteContact\n}\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts\n  const normalizedFilter = filter.toLowerCase();\n  const existingContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter))\n  return {\n    contactList: existingContacts\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatcToProps) (ContactList);\n","import React from \"react\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {connect} from \"react-redux\"\nconst Filter = ({ filter, getFilterName }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <TextField\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={e => getFilterName(e.target.value)}\n      />\n    </>\n  );\n};\nconst mapStateToProps = state => ({\n  filter:state.contacts.filter\n})\nconst mapDispatctToProps = {\n  getFilterName: contactsActions.getFilter\n}\n\nexport default connect(mapStateToProps, mapDispatctToProps) (Filter);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./appTitle.css\";\n\nconst AppTitle = () => {\n    return (\n      <CSSTransition\n        appear={true}\n        in={true}\n        timeout={500}\n        unmountOnExit\n        classNames=\"AppTitle\"\n      >\n     \n          <h1 className=\"title\">PhoneBook</h1>\n       \n      </CSSTransition>\n    );\n}\nexport default AppTitle","import React from \"react\";\n\nimport Form from \"./components/form/Form\";\nimport ContactList from \"./components/contactsList/contactsList\";\nimport Filter from \"./components/filter/Filter\";\nimport styles from \"./global.module.css\";\nimport AppTitle from \"../src/components/appTitle/AppTitle\";\n\nconst App = () => {\n  return (\n    <div className={styles.wrapper}>\n      <AppTitle />\n\n      <Form />\n\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}