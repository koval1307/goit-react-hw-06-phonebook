{"version":3,"sources":["components/contactsList/contacts-list.module.css","global.module.css","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/Notification/Notification.js","components/form/Form.js","components/contactListItem/contactListItem.js","components/contactsList/contactsList.js","components/filter/Filter.js","components/appTitle/AppTitle.js","App.js","index.js"],"names":["module","exports","getContacts","createAction","item","payload","id","uuidv4","name","number","deleteContact","getFilter","itemsReducer","createReducer","contactActions","state","action","filter","contact","filterReducer","_","combineReducers","items","store","configureStore","reducer","contacts","contactsReducer","Notification","CSSTransition","className","Form","notification","handleChange","target","value","setState","getContact","e","preventDefault","props","find","el","onSubmit","reset","this","TextField","type","onChange","required","Button","variant","color","in","unmountOnExit","timeout","classNames","onEntered","Component","mapDispatchToProps","contactsActions","connect","ownProps","console","log","dispatch","styles","contactList__item","tel","btn","onClick","normalizedFilter","toLowerCase","contactList","includes","TransitionGroup","component","contact__list","map","key","mapDispatctToProps","getFilterName","AppTitle","appear","App","wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d72dc58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__list\":\"contacts-list_contact__list__1CVI9\",\"btn\":\"contacts-list_btn__fKySI\",\"contactList__item\":\"contacts-list_contactList__item__3TUPM\",\"name\":\"contacts-list_name__2JGh4\",\"contacts\":\"contacts-list_contacts__PpsPU\",\"enter\":\"contacts-list_enter__swGwa\",\"enterActive\":\"contacts-list_enterActive__24uOt\",\"exit\":\"contacts-list_exit__36oV5\",\"exitActive\":\"contacts-list_exitActive__1rDDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"global_wrapper__327cc\"};","\nimport {createAction, creatrAction} from \"@reduxjs/toolkit\"\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst getContacts = createAction(\"contacts/get\", (item) => ({\n  payload: {\n    id: uuidv4(),\n    name: item.name,\n    number: item.number,\n  },\n}));\nconst deleteContact = createAction(\"contacts/delete\");\nconst getFilter = createAction(\"contacts/filter\");\n// const getContacts = item => ({\n//   type: GET,\n//     payload: {\n//         id:uuidv4(),\n//         name: item.name,\n//         number:item.number\n//     },\n// });\n\n\n// const deleteContact = id => ({\n//     type: DELETE,\n//     payload: {\n//         id\n//     },\n// })\n\n\n\n\n// const getFilter = filter => ({\n//     type: FILTER,\n//     payload:{filter}\n// })\nexport default { getContacts, deleteContact,getFilter }","import { combineReducers } from \"redux\";\nimport contactActions from \"./contacts-actions\"\nimport {createReducer} from \"@reduxjs/toolkit\"\nconst onGetContacts = (state, action) => [...state, action.payload];\nconst onDeleteContacts = (state, action) =>\n    state.filter(contact => contact.id !== action.payload)\n\n\nconst itemsReducer = createReducer([], {\n  [contactActions.getContacts]: onGetContacts ,\n  [contactActions.deleteContact]: onDeleteContacts,\n});\nconst filterReducer = createReducer(\" \", {\n  [contactActions.getFilter]: (_, action) => action.payload,\n});\n\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case contactActions.getContacts.type:\n//       return [...state, payload];\n//     case contactActions.deleteContact.type:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n\n\n// const filterReducer = (state = \" \", { type, payload }) => {\n//   switch (type) {\n//     case contactActions.getFilter.type:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { combineReducers} from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\"\nimport {configureStore} from \"@reduxjs/toolkit\"\nimport contactsReducer from \"./contacts-reducer\";\n\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./notification.css\";\n\nexport default Notification = () => {\n  return (\n    <CSSTransition>\n      <p className=\"notification\">This contact is already exists</p>\n    </CSSTransition>\n  );\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {connect}   from \"react-redux\"\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport contactsActions from \"../../redux/contacts-actions\"\nimport Notification from \"../Notification/Notification\";\nimport { CSSTransition} from \"react-transition-group\";\n\nimport \"../Notification/notification.css\";\n\nclass Form extends Component {\n  state = {\n    name: \" \",\n    number: \" \",\n    notification: false,\n  };\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  getContact = (e) => {\n    e.preventDefault();\n    if (\n      this.props.state.contacts.items.find((el) => el.name === this.state.name)\n    ) {\n      this.setState({ notification: true, name: \" \", number: \" \" });\n    } else {\n      const contact = {\n        name: this.state.name,\n        number: this.state.number,\n        id: uuidv4,\n      };\n      this.props.onSubmit(contact);\n      this.setState({ name: \" \", number: \" \" });\n    }\n    e.target.reset();\n  };\n\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.getContact}>\n          <h2>Name</h2>\n\n          <label>\n            Name:\n            <TextField\n              id=\"outlined-basic\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Phone number:\n            <TextField\n          type='tel'\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Add Contact\n          </Button>\n        </form>\n        <CSSTransition\n          in={this.state.notification}\n          unmountOnExit\n          timeout={2000}\n          classNames=\"notification\"\n          onEntered={() => this.setState({ notification: false })}\n        >\n          <Notification />\n        </CSSTransition>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n return {state}\n}\n\nconst mapDispatchToProps = {\nonSubmit:contactsActions.getContacts\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"../contactsList/contacts-list.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\n\nfunction ContactListItem({ id, name, number, deleteContact }) {\n  return (\n    <li className={styles.contactList__item}>\n      <div className={styles.contacts}>\n        <span className={styles.name}>{name}</span>\n        <span className={styles.tel}>: {number}</span>\n      </div>\n      <Button\n        className={styles.btn}\n        variant=\"contained\"\n        color=\"secondary\"\n        type=\"button\"\n        id={id}\n        onClick={deleteContact}\n      >\n        delete Contact\n      </Button>\n    </li>\n  );\n}\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\n  console.log(item);\n  return {\n    ...item,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteContact: () => dispatch(contactsActions.deleteContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport {connect} from \"react-redux\"\nimport styles from \"./contacts-list.module.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport  ContactListItem from \"../contactListItem/contactListItem\";\nfunction ContactList({ contactList, }) {\n  return (\n    <TransitionGroup\n      component=\"ul\"\n      \n      className={styles.contact__list}\n    >\n      {contactList.map(({id}) => {\n        return (\n          <CSSTransition key={id} timeout={250} unmountOnExit\n           classNames={styles}>\n            <ContactListItem\n              key={id}\n         id={id}\n            />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts\n  const normalizedFilter = filter.toLowerCase();\n  const existingContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter))\n  return {\n    contactList: existingContacts\n  }\n}\n\nexport default connect(mapStateToProps, ) (ContactList);\n","import React from \"react\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {connect} from \"react-redux\"\nconst Filter = ({ filter, getFilterName }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <TextField\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={e => getFilterName(e.target.value)}\n      />\n    </>\n  );\n};\nconst mapStateToProps = state => ({\n  filter:state.contacts.filter\n})\nconst mapDispatctToProps = {\n  getFilterName: contactsActions.getFilter\n}\n\nexport default connect(mapStateToProps, mapDispatctToProps) (Filter);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./appTitle.css\";\n\nconst AppTitle = () => {\n    return (\n      <CSSTransition\n        appear={true}\n        in={true}\n        timeout={500}\n        unmountOnExit\n        classNames=\"AppTitle\"\n      >\n     \n          <h1 className=\"title\">PhoneBook</h1>\n       \n      </CSSTransition>\n    );\n}\nexport default AppTitle","import React from \"react\";\n\nimport Form from \"./components/form/Form\";\nimport ContactList from \"./components/contactsList/contactsList\";\nimport Filter from \"./components/filter/Filter\";\nimport styles from \"./global.module.css\";\nimport AppTitle from \"../src/components/appTitle/AppTitle\";\n\nconst App = () => {\n  return (\n    <div className={styles.wrapper}>\n      <AppTitle />\n\n      <Form />\n\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}